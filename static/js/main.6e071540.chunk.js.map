{"version":3,"sources":["components/Tables/Table/Table.module.css","hoc/Wrapper/Wrapper.js","components/Tables/Table/Table.js","components/Tables/CoinTable/CoinsTable.js","axios.js","containers/Home/Home.js","components/Tables/CoinMarkets/CoinMarkets.js","containers/Currency/Currency.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","table","table__item","wrapper","props","children","react_default","a","createElement","className","style","headers","data","coinsTable","coins","tab","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","coin","value","row","key","id","react_router_dom","to","concat","name","quotes","USD","price","toFixed","volume_24h","market_cap","global","market_cap_usd","push","rank","err","return","setCoins","Table","instance","axios","create","baseURL","Home","state","loading","storeData","dataArray","sortedData","filter","sort","b","_this","setState","_this2","this","get","then","resp","console","log","catch","list","CoinsTable","Wrapper","Component","coinMarkests","i","markets","market","exchange_id","pair","href","market_url","exchange_name","adjusted_volume_24h_share","last_updated","getData","Currency","computedMatch","params","CoinMarkets","App","react_router","containers_Currency_Currency","path","component","exact","Boolean","window","location","hostname","match","app","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e071540.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__fQO48\",\"table__item\":\"Table_table__item__2U1F-\"};","const wrapper = props => props.children;\r\nexport default wrapper;\r\n","import React from \"react\";\r\nimport style from \"./Table.module.css\";\r\n\r\nconst table = props => {\r\n  return (\r\n    <div className={style.table}>\r\n      <table>\r\n        <thead>{props.headers}</thead>\r\n        <tbody>{props.data}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default table;\r\n","import React from \"react\";\r\nimport Table from \"../Table/Table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst coinsTable = props => {\r\n  const coins = setCoins();\r\n  const headers = (\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Price USD</th>\r\n      <th>Price change</th>\r\n      <th>Volume M USD</th>\r\n      <th>Market Cap %</th>\r\n      <th>Market cap M USD</th>\r\n    </tr>\r\n  );\r\n  function setCoins() {\r\n    const tab = [];\r\n\r\n    for (let coin of props.coins) {\r\n      const row = (\r\n        <tr key={coin.id}>\r\n          <td>\r\n            <Link to={`currency/${coin.id}`}>{coin.name}</Link>\r\n          </td>\r\n          <td>{coin.quotes.USD.price.toFixed(2)}</td>\r\n          <td />\r\n          <td>{(coin.quotes.USD.volume_24h / 1000000).toFixed(3)}</td>\r\n          <td>\r\n            {(\r\n              (coin.quotes.USD.market_cap / props.global.market_cap_usd) *\r\n              100\r\n            ).toFixed(3)}\r\n          </td>\r\n          <td>{(coin.quotes.USD.market_cap / 1000000).toFixed(2)}</td>\r\n        </tr>\r\n      );\r\n      tab.push(row);\r\n      if (coin.rank === 100) {\r\n        break;\r\n      }\r\n    }\r\n    return tab;\r\n  }\r\n\r\n  return <Table headers={headers} data={coins} />;\r\n};\r\nexport default coinsTable;\r\n","import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.coinpaprika.com/v1/\"\r\n});\r\nexport default instance;\r\n","import React, { Component } from \"react\";\r\nimport Wrap from \"../../hoc/Wrapper/Wrapper\";\r\nimport CoinsTable from \"../../components/Tables/CoinTable/CoinsTable\";\r\nimport axios from \"../../axios\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    coins: null,\r\n    global: null,\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(\"tickers/\")\r\n      .then(resp => {\r\n        console.log(resp);\r\n        this.storeData(resp.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    axios\r\n      .get(\"global\")\r\n      .then(resp => {\r\n        this.setState({ global: resp.data });\r\n        //  console.log(resp);\r\n      })\r\n      .then(() => {\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  storeData = dataArray => {\r\n    const sortedData = dataArray\r\n      .filter(coin => {\r\n        return coin.rank > 0;\r\n      })\r\n      .sort((a, b) => a.rank - b.rank);\r\n\r\n    this.setState({ coins: sortedData });\r\n  };\r\n\r\n  componentDidUpdate() {}\r\n  // addPriceData = (number = 10) => {\r\n  //   const coins = JSON.parse(JSON.stringify(this.state.data));\r\n\r\n  //   for (let coin of coins) {\r\n  //     axios\r\n  //       .get(`coins/${coin.id}/markets`)\r\n  //       .then(resp => {\r\n  //         const pricing = resp.data.filter(resp.data.quotes.USD.volume_24h);\r\n  //         coin[\"pricing\"] = resp.data;\r\n  //       })\r\n  //       .then(() => {})\r\n  //       .catch(err => console.log(err));\r\n  //     if (coin.rank === number) {\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  //   this.setState({ data: coins });\r\n  // };\r\n\r\n  render() {\r\n    let list = <p>loading</p>;\r\n    if (this.state.coins && this.state.global) {\r\n      list = <CoinsTable coins={this.state.coins} global={this.state.global} />;\r\n    }\r\n\r\n    return <Wrap>{list}</Wrap>;\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Table from \"../Table/Table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst coinMarkests = props => {\r\n  const data = getData();\r\n  const headers = (\r\n    <tr>\r\n      <th>Exchange</th>\r\n      <th>Pair</th>\r\n      <th>Volume (24h) M$</th>\r\n      <th>Price $</th>\r\n      <th>Volume (%)</th>\r\n      <th>Updated</th>\r\n    </tr>\r\n  );\r\n  function getData() {\r\n    const tab = [];\r\n    let i = 0;\r\n    console.log(props.markets);\r\n    for (let market of props.markets) {\r\n      const row = (\r\n        <tr key={`${market.exchange_id}_${market.pair}`}>\r\n          <td>\r\n            <a href={market.market_url}>{market.exchange_name}</a>\r\n          </td>\r\n          <td>{market.pair}</td>\r\n          <td>{(market.quotes.USD.volume_24h / 100000).toFixed(3)}</td>\r\n          <td>{market.quotes.USD.price.toFixed(2)}</td>\r\n          <td>{market.adjusted_volume_24h_share.toFixed(2)}</td>\r\n          <td>{market.last_updated}</td>\r\n        </tr>\r\n      );\r\n      tab.push(row);\r\n      if (i === 100) {\r\n        break;\r\n      } else {\r\n        i++;\r\n      }\r\n    }\r\n    return tab;\r\n  }\r\n\r\n  return <Table headers={headers} data={data} />;\r\n};\r\nexport default coinMarkests;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport CoinMarkets from \"../../components/Tables/CoinMarkets/CoinMarkets\";\r\nimport Wrap from \"../../hoc/Wrapper/Wrapper\";\r\nclass Currency extends Component {\r\n  state = {\r\n    markets: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`coins/${this.props.computedMatch.params.id}/markets`)\r\n      .then(resp => this.setState({ markets: resp.data }));\r\n  }\r\n  sortMarkets() {}\r\n\r\n  render() {\r\n    let markets = <p>loading</p>;\r\n    if (this.state.markets) {\r\n      markets = <CoinMarkets markets={this.state.markets} />;\r\n    }\r\n\r\n    return <Wrap> {markets}</Wrap>;\r\n  }\r\n}\r\nexport default Currency;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./containers/Home/Home\";\r\nimport Currency from \"./containers/Currency/Currency\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Currency path=\"/currency/:id\" component={Currency} />\r\n        <Route path=\"/\" exact component={Home} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst app = (\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}